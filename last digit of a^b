// Java code to find last digit of a^b
import java.util.*;
import java.io.*;
import java.math.*;

class LastDigit{
    static int Modulo(int a, char b[])
    {
        int mod = 0;
        for (int i = 0; i < b.length; i++)
            mod = (mod * 10 + b[i] - '0') % a;
        return mod; 
    }

    
    static int LastDigit(char a[], char b[])
    {
        int len_a = a.length, len_b = b.length;
        if (len_a == 1 && len_b == 1 && b[0] == '0' && a[0] == '0')
            return 1;
        if (len_b == 1 && b[0] == '0')
            return 1;
        if (len_a == 1 && a[0] == '0')
            return 0;
        int exp = (Modulo(4, b) == 0) ? 4 : Modulo(4, b);
        int res = (int)(Math.pow(a[len_a - 1] - '0', exp));
        return res % 10;
    }

    
    public static void main(String args[]) throws IOException
    {
        char a[] = "3".toCharArray(),b[]={'2'};
        //char a[] = "865931319316542686277381196571129863345658734688974588946427161917473915979538881219381125741749481857631878831642615876943367723677271266568448965183346188956972637745779523711717488433199899668943812346622255362532616499752668719998372888782151382964939763988546332358266447433547232683929158459193955449942554713494945179283228163738525824931254642344892257179773158582434584292545172722568444972183884748637126446391879348675653998945453786844855715179348722974722935359586375169726415677272956222565182219495573252252427536786995568422461651325119528737846382385334641945463261227".toCharArray(), b[] = {'97154573693869964568867664756948662322469462188623196938881849184885418969513172377323641297532597773869377613711712629167753199568271516989484675256243277669116684326173232735679615187465564118565484144772898126326271859397496645697817169968595963375472842516713497514756744454665533324875231864693639829376298335697996443927286423819635395897558199354765519596154162333678681611939184133571378626135359169748267312844318171293213939865869389565673338632115452715473776272123568299'};
        System.out.println(LastDigit(a, b));
    }
}
